// Code generated by Kitex v0.8.0. DO NOT EDIT.

package systemservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	v1 "github.com/user823/Sophie/api/thrift/system/v1"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	ListConfigs(ctx context.Context, req *v1.ListConfigsRequest, callOptions ...callopt.Option) (r *v1.ListConfigsResponse, err error)
	ExportConfig(ctx context.Context, req *v1.ExportConfigRequest, callOptions ...callopt.Option) (r *v1.ExportConfigResponse, err error)
	GetConfigById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.ConfigResponse, err error)
	GetConfigByKey(ctx context.Context, key string, callOptions ...callopt.Option) (r *v1.ConfigResponse, err error)
	CreateConfig(ctx context.Context, req *v1.CreateConfigRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateConfig(ctx context.Context, req *v1.UpdateConfigReqeust, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteConfig(ctx context.Context, req *v1.DeleteConfigReqeust, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	RefreshConfig(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListDepts(ctx context.Context, req *v1.ListDeptsRequest, callOptions ...callopt.Option) (r *v1.ListDeptsResponse, err error)
	ListDeptsExcludeChild(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.ListDeptsResponse, err error)
	GetDeptById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.DeptResponse, err error)
	CreateDept(ctx context.Context, req *v1.CreateDeptRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateDept(ctx context.Context, req *v1.UpdateDeptRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteDept(ctx context.Context, req *v1.DeleteDeptRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListDictDatas(ctx context.Context, req *v1.ListDictDatasRequest, callOptions ...callopt.Option) (r *v1.ListDictDatasResponse, err error)
	ExportDictData(ctx context.Context, req *v1.ExportDictDataRequest, callOptions ...callopt.Option) (r *v1.ExportDictDataResponse, err error)
	GetDictDataByCode(ctx context.Context, code int64, callOptions ...callopt.Option) (r *v1.DictDataResponse, err error)
	ListDictDataByType(ctx context.Context, _type string, callOptions ...callopt.Option) (r *v1.ListDictDatasResponse, err error)
	CreateDictData(ctx context.Context, req *v1.CreateDictDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateDictData(ctx context.Context, req *v1.UpdateDictDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteDictData(ctx context.Context, req *v1.DeleteDictDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListDictTypes(ctx context.Context, req *v1.ListDictTypesRequest, callOptions ...callopt.Option) (r *v1.ListDictTypesResponse, err error)
	ExportDictType(ctx context.Context, req *v1.ExportDictTypeRequest, callOptions ...callopt.Option) (r *v1.ExportDictTypeResponse, err error)
	GetDictTypeById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.DictTypeResponse, err error)
	CreateDictType(ctx context.Context, req *v1.CreateDictTypeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateDictType(ctx context.Context, req *v1.UpdateDictTypeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteDictType(ctx context.Context, req *v1.DeleteDictTypeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	RefreshDictType(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DictTypeOptionSelect(ctx context.Context, callOptions ...callopt.Option) (r *v1.DictTypeOptionSelectResponse, err error)
	ListSysLogininfos(ctx context.Context, req *v1.ListSysLogininfosRequest, callOptions ...callopt.Option) (r *v1.ListSysLogininfosResponse, err error)
	ExportLogininfo(ctx context.Context, req *v1.ExportLogininfoRequest, callOptions ...callopt.Option) (r *v1.ExportLogininfoResponse, err error)
	RemoveSysLogininfosById(ctx context.Context, req *v1.RemoveSysLogininfosByIdRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	LogininfoClean(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UnlockByUserName(ctx context.Context, username string, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	CreateSysLogininfo(ctx context.Context, req *v1.CreateSysLogininfoRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListSysMenus(ctx context.Context, req *v1.ListSysMenusRequest, callOptions ...callopt.Option) (r *v1.ListSysMenusResponse, err error)
	GetSysMenuById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysMenuResponse, err error)
	ListTreeMenu(ctx context.Context, req *v1.ListTreeMenuRequest, callOptions ...callopt.Option) (r *v1.ListSysMenusResponse, err error)
	ListTreeMenuByRoleid(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.RoleMenuResponse, err error)
	CreateMenu(ctx context.Context, req *v1.CreateMenuRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateMenu(ctx context.Context, req *v1.UpdateMenuRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteMenu(ctx context.Context, req *v1.DeleteMenuRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	GetRouters(ctx context.Context, callOptions ...callopt.Option) (r *v1.RoutersResonse, err error)
	GetSysMenuPermsByRoleIds(ctx context.Context, req *v1.GetSysMenuPermsByRoleIdsRequest, callOptions ...callopt.Option) (r *v1.SysMenuPermsResponse, err error)
	ListSysNotices(ctx context.Context, req *v1.ListSysNoticesRequest, callOptions ...callopt.Option) (r *v1.ListSysNoticesResponse, err error)
	GetSysNoticeById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysNoticeResponse, err error)
	CreateSysNotice(ctx context.Context, req *v1.CreateSysNoticeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteSysNotice(ctx context.Context, req *v1.DeleteSysNoticeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateSysNotice(ctx context.Context, req *v1.UpdateSysNoticeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListSysOperLogs(ctx context.Context, req *v1.ListSysOperLogsRequest, callOptions ...callopt.Option) (r *v1.ListSysOperLogsResponse, err error)
	ExportSysOperLog(ctx context.Context, req *v1.ExportSysOperLogRequest, callOptions ...callopt.Option) (r *v1.ExportSysOperLogResponse, err error)
	DeleteSysOperLog(ctx context.Context, req *v1.DeleteSysOperLogRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	OperLogClean(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	CreateSysOperLog(ctx context.Context, req *v1.CreateSysOperLogRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListSysPosts(ctx context.Context, req *v1.ListSysPostsRequest, callOptions ...callopt.Option) (r *v1.ListSysPostsResponse, err error)
	ExportSysPost(ctx context.Context, req *v1.ExportSysPostRequest, callOptions ...callopt.Option) (r *v1.ExportSysPostResponse, err error)
	GetSysPostById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysPostResponse, err error)
	CreateSysPost(ctx context.Context, req *v1.CreateSysPostRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateSysPost(ctx context.Context, req *v1.UpdateSysPostRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteSysPost(ctx context.Context, req *v1.DeleteSysPostRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	PostOptionSelect(ctx context.Context, callOptions ...callopt.Option) (r *v1.PostOptionSelectResponse, err error)
	Profile(ctx context.Context, callOptions ...callopt.Option) (r *v1.ProfileResponse, err error)
	UpdateProfile(ctx context.Context, req *v1.UpdateProfileRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdatePassword(ctx context.Context, req *v1.UpdatePasswordRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListSysRole(ctx context.Context, req *v1.ListSysRolesRequest, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error)
	ExportSysRole(ctx context.Context, req *v1.ExportSysRoleRequest, callOptions ...callopt.Option) (r *v1.ExportSysRoleResponse, err error)
	GetSysRoleByid(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysRoleResponse, err error)
	CreateSysRole(ctx context.Context, req *v1.CreateSysRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateSysRole(ctx context.Context, req *v1.UpdateSysRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DataScope(ctx context.Context, req *v1.DataScopeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ChangeSysRoleStatus(ctx context.Context, req *v1.ChangeSysRoleStatusRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteSysRole(ctx context.Context, req *v1.DeleteSysRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListRoleOption(ctx context.Context, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error)
	AllocatedList(ctx context.Context, req *v1.AllocatedListRequest, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error)
	UnallocatedList(ctx context.Context, req *v1.UnallocatedListRequest, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error)
	CancelAuthUser(ctx context.Context, req *v1.CancelAuthUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	CancelAuthUserAll(ctx context.Context, req *v1.CancelAuthUserAllRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	SelectAuthUserAll(ctx context.Context, req *v1.SelectAuthUserAllRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeptTreeByRoleId(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.DeptTreeByRoleIdResponse, err error)
	GetSysRoleByUser(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error)
	ListSysUsers(ctx context.Context, req *v1.ListSysUsersRequest, callOptions ...callopt.Option) (r *v1.ListSysUsersResponse, err error)
	ExportSysUser(ctx context.Context, req *v1.ExportSysUserRequest, callOptions ...callopt.Option) (r *v1.ExportSysUserResponse, err error)
	ImportUserData(ctx context.Context, req *v1.ImportUserDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	GetUserInfoByName(ctx context.Context, name string, callOptions ...callopt.Option) (r *v1.UserInfoResponse, err error)
	RegisterSysUser(ctx context.Context, req *v1.RegisterSysUserRequest, callOptions ...callopt.Option) (r *v1.RegisterSysUserResponse, err error)
	GetUserInfoById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.UserInfoResponse, err error)
	CreateSysUser(ctx context.Context, req *v1.CreateSysUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	UpdateSysUser(ctx context.Context, req *v1.UpdateSysUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	DeleteSysUser(ctx context.Context, req *v1.DeleteSysUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ResetPassword(ctx context.Context, req *v1.ResetPasswordRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ChangeSysUserStatus(ctx context.Context, req *v1.ChangeSysUserStatus, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	GetAuthRoleById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.AuthRoleInfoResponse, err error)
	AuthRole(ctx context.Context, req *v1.AuthRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
	ListDeptsTree(ctx context.Context, req *v1.ListDeptsTreeRequest, callOptions ...callopt.Option) (r *v1.ListDeptsTreeResponse, err error)
	ListSysUserOnlines(ctx context.Context, req *v1.ListSysUserOnlinesRequest, callOptions ...callopt.Option) (r *v1.ListSysUserOnline, err error)
	ForceLogout(ctx context.Context, req *v1.ForceLogoutRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kSystemServiceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kSystemServiceClient struct {
	*kClient
}

func (p *kSystemServiceClient) ListConfigs(ctx context.Context, req *v1.ListConfigsRequest, callOptions ...callopt.Option) (r *v1.ListConfigsResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListConfigs(ctx, req)
}

func (p *kSystemServiceClient) ExportConfig(ctx context.Context, req *v1.ExportConfigRequest, callOptions ...callopt.Option) (r *v1.ExportConfigResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportConfig(ctx, req)
}

func (p *kSystemServiceClient) GetConfigById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.ConfigResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetConfigById(ctx, id)
}

func (p *kSystemServiceClient) GetConfigByKey(ctx context.Context, key string, callOptions ...callopt.Option) (r *v1.ConfigResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetConfigByKey(ctx, key)
}

func (p *kSystemServiceClient) CreateConfig(ctx context.Context, req *v1.CreateConfigRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateConfig(ctx, req)
}

func (p *kSystemServiceClient) UpdateConfig(ctx context.Context, req *v1.UpdateConfigReqeust, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateConfig(ctx, req)
}

func (p *kSystemServiceClient) DeleteConfig(ctx context.Context, req *v1.DeleteConfigReqeust, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteConfig(ctx, req)
}

func (p *kSystemServiceClient) RefreshConfig(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.RefreshConfig(ctx)
}

func (p *kSystemServiceClient) ListDepts(ctx context.Context, req *v1.ListDeptsRequest, callOptions ...callopt.Option) (r *v1.ListDeptsResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListDepts(ctx, req)
}

func (p *kSystemServiceClient) ListDeptsExcludeChild(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.ListDeptsResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListDeptsExcludeChild(ctx, id)
}

func (p *kSystemServiceClient) GetDeptById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.DeptResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetDeptById(ctx, id)
}

func (p *kSystemServiceClient) CreateDept(ctx context.Context, req *v1.CreateDeptRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateDept(ctx, req)
}

func (p *kSystemServiceClient) UpdateDept(ctx context.Context, req *v1.UpdateDeptRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateDept(ctx, req)
}

func (p *kSystemServiceClient) DeleteDept(ctx context.Context, req *v1.DeleteDeptRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteDept(ctx, req)
}

func (p *kSystemServiceClient) ListDictDatas(ctx context.Context, req *v1.ListDictDatasRequest, callOptions ...callopt.Option) (r *v1.ListDictDatasResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListDictDatas(ctx, req)
}

func (p *kSystemServiceClient) ExportDictData(ctx context.Context, req *v1.ExportDictDataRequest, callOptions ...callopt.Option) (r *v1.ExportDictDataResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportDictData(ctx, req)
}

func (p *kSystemServiceClient) GetDictDataByCode(ctx context.Context, code int64, callOptions ...callopt.Option) (r *v1.DictDataResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetDictDataByCode(ctx, code)
}

func (p *kSystemServiceClient) ListDictDataByType(ctx context.Context, _type string, callOptions ...callopt.Option) (r *v1.ListDictDatasResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListDictDataByType(ctx, _type)
}

func (p *kSystemServiceClient) CreateDictData(ctx context.Context, req *v1.CreateDictDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateDictData(ctx, req)
}

func (p *kSystemServiceClient) UpdateDictData(ctx context.Context, req *v1.UpdateDictDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateDictData(ctx, req)
}

func (p *kSystemServiceClient) DeleteDictData(ctx context.Context, req *v1.DeleteDictDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteDictData(ctx, req)
}

func (p *kSystemServiceClient) ListDictTypes(ctx context.Context, req *v1.ListDictTypesRequest, callOptions ...callopt.Option) (r *v1.ListDictTypesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListDictTypes(ctx, req)
}

func (p *kSystemServiceClient) ExportDictType(ctx context.Context, req *v1.ExportDictTypeRequest, callOptions ...callopt.Option) (r *v1.ExportDictTypeResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportDictType(ctx, req)
}

func (p *kSystemServiceClient) GetDictTypeById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.DictTypeResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetDictTypeById(ctx, id)
}

func (p *kSystemServiceClient) CreateDictType(ctx context.Context, req *v1.CreateDictTypeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateDictType(ctx, req)
}

func (p *kSystemServiceClient) UpdateDictType(ctx context.Context, req *v1.UpdateDictTypeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateDictType(ctx, req)
}

func (p *kSystemServiceClient) DeleteDictType(ctx context.Context, req *v1.DeleteDictTypeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteDictType(ctx, req)
}

func (p *kSystemServiceClient) RefreshDictType(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.RefreshDictType(ctx)
}

func (p *kSystemServiceClient) DictTypeOptionSelect(ctx context.Context, callOptions ...callopt.Option) (r *v1.DictTypeOptionSelectResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DictTypeOptionSelect(ctx)
}

func (p *kSystemServiceClient) ListSysLogininfos(ctx context.Context, req *v1.ListSysLogininfosRequest, callOptions ...callopt.Option) (r *v1.ListSysLogininfosResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysLogininfos(ctx, req)
}

func (p *kSystemServiceClient) ExportLogininfo(ctx context.Context, req *v1.ExportLogininfoRequest, callOptions ...callopt.Option) (r *v1.ExportLogininfoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportLogininfo(ctx, req)
}

func (p *kSystemServiceClient) RemoveSysLogininfosById(ctx context.Context, req *v1.RemoveSysLogininfosByIdRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.RemoveSysLogininfosById(ctx, req)
}

func (p *kSystemServiceClient) LogininfoClean(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.LogininfoClean(ctx)
}

func (p *kSystemServiceClient) UnlockByUserName(ctx context.Context, username string, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UnlockByUserName(ctx, username)
}

func (p *kSystemServiceClient) CreateSysLogininfo(ctx context.Context, req *v1.CreateSysLogininfoRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateSysLogininfo(ctx, req)
}

func (p *kSystemServiceClient) ListSysMenus(ctx context.Context, req *v1.ListSysMenusRequest, callOptions ...callopt.Option) (r *v1.ListSysMenusResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysMenus(ctx, req)
}

func (p *kSystemServiceClient) GetSysMenuById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysMenuResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSysMenuById(ctx, id)
}

func (p *kSystemServiceClient) ListTreeMenu(ctx context.Context, req *v1.ListTreeMenuRequest, callOptions ...callopt.Option) (r *v1.ListSysMenusResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListTreeMenu(ctx, req)
}

func (p *kSystemServiceClient) ListTreeMenuByRoleid(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.RoleMenuResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListTreeMenuByRoleid(ctx, id)
}

func (p *kSystemServiceClient) CreateMenu(ctx context.Context, req *v1.CreateMenuRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateMenu(ctx, req)
}

func (p *kSystemServiceClient) UpdateMenu(ctx context.Context, req *v1.UpdateMenuRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateMenu(ctx, req)
}

func (p *kSystemServiceClient) DeleteMenu(ctx context.Context, req *v1.DeleteMenuRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteMenu(ctx, req)
}

func (p *kSystemServiceClient) GetRouters(ctx context.Context, callOptions ...callopt.Option) (r *v1.RoutersResonse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetRouters(ctx)
}

func (p *kSystemServiceClient) GetSysMenuPermsByRoleIds(ctx context.Context, req *v1.GetSysMenuPermsByRoleIdsRequest, callOptions ...callopt.Option) (r *v1.SysMenuPermsResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSysMenuPermsByRoleIds(ctx, req)
}

func (p *kSystemServiceClient) ListSysNotices(ctx context.Context, req *v1.ListSysNoticesRequest, callOptions ...callopt.Option) (r *v1.ListSysNoticesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysNotices(ctx, req)
}

func (p *kSystemServiceClient) GetSysNoticeById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysNoticeResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSysNoticeById(ctx, id)
}

func (p *kSystemServiceClient) CreateSysNotice(ctx context.Context, req *v1.CreateSysNoticeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateSysNotice(ctx, req)
}

func (p *kSystemServiceClient) DeleteSysNotice(ctx context.Context, req *v1.DeleteSysNoticeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteSysNotice(ctx, req)
}

func (p *kSystemServiceClient) UpdateSysNotice(ctx context.Context, req *v1.UpdateSysNoticeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateSysNotice(ctx, req)
}

func (p *kSystemServiceClient) ListSysOperLogs(ctx context.Context, req *v1.ListSysOperLogsRequest, callOptions ...callopt.Option) (r *v1.ListSysOperLogsResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysOperLogs(ctx, req)
}

func (p *kSystemServiceClient) ExportSysOperLog(ctx context.Context, req *v1.ExportSysOperLogRequest, callOptions ...callopt.Option) (r *v1.ExportSysOperLogResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportSysOperLog(ctx, req)
}

func (p *kSystemServiceClient) DeleteSysOperLog(ctx context.Context, req *v1.DeleteSysOperLogRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteSysOperLog(ctx, req)
}

func (p *kSystemServiceClient) OperLogClean(ctx context.Context, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.OperLogClean(ctx)
}

func (p *kSystemServiceClient) CreateSysOperLog(ctx context.Context, req *v1.CreateSysOperLogRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateSysOperLog(ctx, req)
}

func (p *kSystemServiceClient) ListSysPosts(ctx context.Context, req *v1.ListSysPostsRequest, callOptions ...callopt.Option) (r *v1.ListSysPostsResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysPosts(ctx, req)
}

func (p *kSystemServiceClient) ExportSysPost(ctx context.Context, req *v1.ExportSysPostRequest, callOptions ...callopt.Option) (r *v1.ExportSysPostResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportSysPost(ctx, req)
}

func (p *kSystemServiceClient) GetSysPostById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysPostResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSysPostById(ctx, id)
}

func (p *kSystemServiceClient) CreateSysPost(ctx context.Context, req *v1.CreateSysPostRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateSysPost(ctx, req)
}

func (p *kSystemServiceClient) UpdateSysPost(ctx context.Context, req *v1.UpdateSysPostRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateSysPost(ctx, req)
}

func (p *kSystemServiceClient) DeleteSysPost(ctx context.Context, req *v1.DeleteSysPostRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteSysPost(ctx, req)
}

func (p *kSystemServiceClient) PostOptionSelect(ctx context.Context, callOptions ...callopt.Option) (r *v1.PostOptionSelectResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.PostOptionSelect(ctx)
}

func (p *kSystemServiceClient) Profile(ctx context.Context, callOptions ...callopt.Option) (r *v1.ProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Profile(ctx)
}

func (p *kSystemServiceClient) UpdateProfile(ctx context.Context, req *v1.UpdateProfileRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateProfile(ctx, req)
}

func (p *kSystemServiceClient) UpdatePassword(ctx context.Context, req *v1.UpdatePasswordRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdatePassword(ctx, req)
}

func (p *kSystemServiceClient) ListSysRole(ctx context.Context, req *v1.ListSysRolesRequest, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysRole(ctx, req)
}

func (p *kSystemServiceClient) ExportSysRole(ctx context.Context, req *v1.ExportSysRoleRequest, callOptions ...callopt.Option) (r *v1.ExportSysRoleResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportSysRole(ctx, req)
}

func (p *kSystemServiceClient) GetSysRoleByid(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.SysRoleResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSysRoleByid(ctx, id)
}

func (p *kSystemServiceClient) CreateSysRole(ctx context.Context, req *v1.CreateSysRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateSysRole(ctx, req)
}

func (p *kSystemServiceClient) UpdateSysRole(ctx context.Context, req *v1.UpdateSysRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateSysRole(ctx, req)
}

func (p *kSystemServiceClient) DataScope(ctx context.Context, req *v1.DataScopeRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DataScope(ctx, req)
}

func (p *kSystemServiceClient) ChangeSysRoleStatus(ctx context.Context, req *v1.ChangeSysRoleStatusRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ChangeSysRoleStatus(ctx, req)
}

func (p *kSystemServiceClient) DeleteSysRole(ctx context.Context, req *v1.DeleteSysRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteSysRole(ctx, req)
}

func (p *kSystemServiceClient) ListRoleOption(ctx context.Context, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListRoleOption(ctx)
}

func (p *kSystemServiceClient) AllocatedList(ctx context.Context, req *v1.AllocatedListRequest, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.AllocatedList(ctx, req)
}

func (p *kSystemServiceClient) UnallocatedList(ctx context.Context, req *v1.UnallocatedListRequest, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UnallocatedList(ctx, req)
}

func (p *kSystemServiceClient) CancelAuthUser(ctx context.Context, req *v1.CancelAuthUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CancelAuthUser(ctx, req)
}

func (p *kSystemServiceClient) CancelAuthUserAll(ctx context.Context, req *v1.CancelAuthUserAllRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CancelAuthUserAll(ctx, req)
}

func (p *kSystemServiceClient) SelectAuthUserAll(ctx context.Context, req *v1.SelectAuthUserAllRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SelectAuthUserAll(ctx, req)
}

func (p *kSystemServiceClient) DeptTreeByRoleId(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.DeptTreeByRoleIdResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeptTreeByRoleId(ctx, id)
}

func (p *kSystemServiceClient) GetSysRoleByUser(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.ListSysRolesResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSysRoleByUser(ctx, id)
}

func (p *kSystemServiceClient) ListSysUsers(ctx context.Context, req *v1.ListSysUsersRequest, callOptions ...callopt.Option) (r *v1.ListSysUsersResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysUsers(ctx, req)
}

func (p *kSystemServiceClient) ExportSysUser(ctx context.Context, req *v1.ExportSysUserRequest, callOptions ...callopt.Option) (r *v1.ExportSysUserResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportSysUser(ctx, req)
}

func (p *kSystemServiceClient) ImportUserData(ctx context.Context, req *v1.ImportUserDataRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportUserData(ctx, req)
}

func (p *kSystemServiceClient) GetUserInfoByName(ctx context.Context, name string, callOptions ...callopt.Option) (r *v1.UserInfoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetUserInfoByName(ctx, name)
}

func (p *kSystemServiceClient) RegisterSysUser(ctx context.Context, req *v1.RegisterSysUserRequest, callOptions ...callopt.Option) (r *v1.RegisterSysUserResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.RegisterSysUser(ctx, req)
}

func (p *kSystemServiceClient) GetUserInfoById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.UserInfoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetUserInfoById(ctx, id)
}

func (p *kSystemServiceClient) CreateSysUser(ctx context.Context, req *v1.CreateSysUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateSysUser(ctx, req)
}

func (p *kSystemServiceClient) UpdateSysUser(ctx context.Context, req *v1.UpdateSysUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateSysUser(ctx, req)
}

func (p *kSystemServiceClient) DeleteSysUser(ctx context.Context, req *v1.DeleteSysUserRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteSysUser(ctx, req)
}

func (p *kSystemServiceClient) ResetPassword(ctx context.Context, req *v1.ResetPasswordRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ResetPassword(ctx, req)
}

func (p *kSystemServiceClient) ChangeSysUserStatus(ctx context.Context, req *v1.ChangeSysUserStatus, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ChangeSysUserStatus(ctx, req)
}

func (p *kSystemServiceClient) GetAuthRoleById(ctx context.Context, id int64, callOptions ...callopt.Option) (r *v1.AuthRoleInfoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetAuthRoleById(ctx, id)
}

func (p *kSystemServiceClient) AuthRole(ctx context.Context, req *v1.AuthRoleRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.AuthRole(ctx, req)
}

func (p *kSystemServiceClient) ListDeptsTree(ctx context.Context, req *v1.ListDeptsTreeRequest, callOptions ...callopt.Option) (r *v1.ListDeptsTreeResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListDeptsTree(ctx, req)
}

func (p *kSystemServiceClient) ListSysUserOnlines(ctx context.Context, req *v1.ListSysUserOnlinesRequest, callOptions ...callopt.Option) (r *v1.ListSysUserOnline, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListSysUserOnlines(ctx, req)
}

func (p *kSystemServiceClient) ForceLogout(ctx context.Context, req *v1.ForceLogoutRequest, callOptions ...callopt.Option) (r *v1.BaseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ForceLogout(ctx, req)
}
